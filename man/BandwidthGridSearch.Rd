% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util-func.R
\name{BandwidthGridSearch}
\alias{BandwidthGridSearch}
\title{Bandwidth grid search}
\usage{
BandwidthGridSearch(fit, criterion = "McF.R2", n.bandwidth = 50)
}
\arguments{
\item{fit}{a fitted 'semiBRM' object.}

\item{criterion}{a character indicating the criterion to be used for evaluation. It can takes
either "McF.R2", "accuracy", "precision, "aic", or  "bic" (see Details).}

\item{n.bandwidth}{an integer of the number of bandwidths to be searched.}
}
\value{
a list with \code{bandwidth.best}: the best bandwidth found, \code{criterion.value}:
its criterion value, \code{criterion}: the choice of criterion, and \code{bandwith}:
the scoreboard for candidates.
}
\description{
This performs grid search to find the best bandwidth for the fitted semiparmetric binary
response model.
}
\details{
Evaluation is based on in-sample semiparametric conditional probability Pr(Y=1|X), which
is obtained from the leave-one-out version of the Gaussian Nadaraya-Watson estimator.

This function first randomly generates \code{n.bandwidth} candidates from a uniform distribution
with range \code{[h0/3, 3*h0]}, where \code{h0} is the Silverman's rule of thumb bandwidth,
\code{h0 = sd(v)*1.06*N^(-1/5)}. Then, it computes 'performance' according to the given
\code{criterion} over the condidates and picks up the 'best' one.

\code{criterion = "McF.R2"} employs the McFaddenâ€™s pseudo R-squared for assessment.

For \code{criterion = "accuracy"} or \code{criterion = "precision"}, the function first predcits
binary response using the semiparametric conditional probability, assigning 1 if
the probability is greater than or equal to 0.5 and 0 otherwise. Then, it calculates the
confusion matrix and predictive accuracy or precision. In turn, the maximizer of the predictive
accuracy or precision becomes the best bandwidth.

For \code{criterion = "aic"} or \code{criterion = "bic"}, the criterion values are calculated
from the quasi maximum likelihood at the parameter estimates. And, the minimizer of aic or bic
becomes the best bandwidth.
}
\examples{
# data generating process
N <- 1000L
X1 <- rnorm(N)
X2 <- (X1 + 2*rnorm(N))/sqrt(5) + 1
X3 <- rnorm(N)^2/sqrt(2)
X <- cbind(X1, X2, X3)
beta <- c(2, 2, -1, -1)
V <- as.vector(cbind(X, 1)\%*\%beta)
Y <- ifelse(V >= rnorm(N), 1L, 0L)

# parameter estimation
qmle <- semiBRM(x = X, y = Y, control = list(iterlim=50))

# bandwidth search
h1 <- BandwidthGridSearch(qmle)
h2 <- BandwidthGridSearch(qmle, criterion = "accuracy")
h3 <- BandwidthGridSearch(qmle, criterion = "precision")
h4 <- BandwidthGridSearch(qmle, criterion = "aic")
h5 <- BandwidthGridSearch(qmle, criterion = "bic")
}
